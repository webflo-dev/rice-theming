#!/usr/bin/env bash

all=(shutdown reboot logout lockscreen suspend hibernate)

show=("${all[@]}")

declare -A texts
texts[shutdown]="shut down"
texts[reboot]="reboot"
texts[logout]="log out"
texts[lockscreen]="lock screen"
texts[suspend]="suspend"
texts[hibernate]="hibernate"

declare -A icons
icons[shutdown]="\uf011"
icons[reboot]="\ufc07"
icons[logout]="\uf842"
icons[lockscreen]="\uf023"
icons[suspend]="\uf9b1"
icons[hibernate]="\uf7c9"
icons[cancel]="\u00d7"

declare -A actions
actions[shutdown]="systemctl poweroff"
actions[reboot]="systemctl reboot"
actions[logout]="loginctl terminate-session ${XDG_SESSION_ID-}"
actions[lockscreen]="loginctl lock-session ${XDG_SESSION_ID-}"
actions[suspend]="systemctl suspend"
actions[hibernate]="systemctl hibernate"


confirmations=(reboot shutdown logout)


function write_message {
    icon="<span font_size=\"medium\">$1</span>"
    text="<span font_size=\"medium\">$2</span>"
    echo -n "\u200e$icon \u2068$text\u2069"
}


function print_selection {
    echo -e "$1" | $(read -r -d '' entry; echo "echo $entry")
}


declare -A messages
for entry in "${all[@]}"
do
    messages[$entry]=$(write_message "${icons[$entry]}" "${texts[$entry]^}")
done


if [ $# -gt 0 ]; then
    selection="${@}"
fi

# Don't allow custom entries
echo -e "\0no-custom\x1ftrue"
# Use markup
echo -e "\0markup-rows\x1ftrue"

if [ -z "${selection+x}" ]
then
    echo -e "\0prompt\x1fPower menu"
    for entry in "${show[@]}"
    do
        echo -e "${messages[$entry]}\0icon\x1f${icons[$entry]}"
    done
else

    declare -A confirmationMessages
    for entry in "${all[@]}"
    do
        confirmationMessages[$entry]=$(write_message "${icons[$entry]}" "Yes, ${texts[$entry]}")
    done
    confirmationMessages[cancel]=$(write_message "${icons[cancel]}" "No, cancel")


    for entry in "${show[@]}"
    do
        if [ "$selection" = "$(print_selection "${messages[$entry]}")" ]
        then
            # Check if the selected entry is listed in confirmation requirements
            for confirmation in "${confirmations[@]}"
            do
                if [ "$entry" = "$confirmation" ]
                then
                    # Ask for confirmation
                    echo -e "\0prompt\x1fAre you sure"
                    echo -e "\0urgent\x1f1"
                    echo -e "\0active\x1f0"
                    echo -e "${confirmationMessages[$entry]}\0icon\x1f${icons[$entry]}"
                    echo -e "${confirmationMessages[cancel]}\0icon\x1f${icons[cancel]}"
                    exit 0
                fi
            done
            # If not, then no confirmation is required, so mark confirmed
            selection=$(print_selection "${confirmationMessages[$entry]}")
        fi
        if [ "$selection" = "$(print_selection "${confirmationMessages[$entry]}")" ]
        then
            # Perform the action
            ${actions[$entry]}
            exit 0
        fi
        if [ "$selection" = "$(print_selection "${confirmationMessages[cancel]}")" ]
        then
            # Do nothing
            exit 0
        fi
    done
    # The selection didn't match anything, so raise an error
    echo "Invalid selection: $selection" >&2
    exit 1
fi
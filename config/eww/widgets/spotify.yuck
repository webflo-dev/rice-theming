(defpoll spotify_status :interval "10s" :initial "Stopped" "playerctl status spotify")
(defpoll song :interval "2s" "playerctl metadata title")
(defpoll artist :interval "2s" "playerctl metadata artist")
(defpoll album :interval "2s" "playerctl metadata album")
(defpoll cover_art :interval "2s" "playerctl metadata mpris:artUrl")
(defpoll play_symbol :interval "1s" "song_status=`playerctl status`; case $song_status in 'Paused') echo '契';; *) echo '';; esac")
(defvar show_media_controls true)



(defwidget hover_slider_right [reveal_var reveal_var_name ?tooltip]
    (eventbox :onhover "eww update ${reveal_var_name}=true" :onhoverlost "eww update ${reveal_var_name}=false" :tooltip tooltip
    (box :orientation "h" :space-evenly false :hexpand true :vexpand false
        (children :nth 0)
        (revealer :reveal "${reveal_var}" :transition "slideright" :duration "250ms"
            (children :nth 1))))
            )
    

(defwidget spotify [] 
    (box :class "dock-box spotify" :orientation "h" :space-evenly false :hexpand false :vexpand false :visible {spotify_status != "Stopped"}
        (hover_slider_right :reveal_var show_media_controls :reveal_var_name "show_media_controls" :direction "right"
            (box :orientation "h" :space-evenly false :hexpand false :vexpand false
                (box :class "album-art" :hexpand false :vexpand false :style "background-image:url('${cover_art}');")
                (box :orientation "v" :class "song-details" :space-evenly false :hexpand false :vexpand false
                    (label :halign "start" :class "song" :limit-width 26 :text song)
                    (label :halign "start" :class "artist" :text artist)))
            (centerbox :orientation "h" :class "media-controls" :valign "center" :halign "start" :hexpand true
                (button :class "media-button" :onclick "playerctl previous" "玲")
                (button :class "media-button" :onclick "playerctl play-pause" play_symbol)
                (button :class "media-button" :onclick "playerctl next" "怜")
            )
        )
    )
)
